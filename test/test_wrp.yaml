# WRP Test Framework - Test Definitions
# Format: Tests that feed prompts to wrp.py and validate JSON responses

tests:
  - name: "hello_world"
    description: "Basic test to verify agent responds with proper JSON format"
    mcps: ["arxiv"]  # Used to determine WRP config file(s) to use
    prompt: 'Respond with exactly the following JSON: {"status": "ok"}'
    expected_json:
      status: "ok"
    json_schema:
      type: "object"
      required: ["status"]
      properties:
        status:
          type: "string"
          enum: ["ok"]
    timeout: 20

  - name: "arxiv_search_test"
    description: "Test Arxiv MCP search functionality"
    mcps: ["arxiv"]
    prompt: 'Use search_by_title to search for papers with title "machine learning". Return results as JSON: {"query": "machine learning", "found_papers": true, "paper_titles": ["title1", "title2", "title3"]}'
    expected_json:
      query: "machine learning"
      found_papers: true
    json_schema:
      type: "object"
      required: ["query", "found_papers", "paper_titles"]
      properties:
        query:
          type: "string"
          enum: ["machine learning"]
        found_papers:
          type: "boolean"
          enum: [true]
        paper_titles:
          type: "array"
          items:
            type: "string"
          minItems: 1
    timeout: 45

  - name: "multi_turn_arxiv_test"
    description: "Test multiple sequential tool calls within Arxiv MCP"
    mcps: ["arxiv"]
    multi_turn: true
    turns:
      - prompt: 'Use search_by_title to find papers about "neural networks". Return ONLY this exact JSON with no other text: {"search_done": true, "topic": "neural networks", "paper_titles": ["Neural Network Paper 1", "Neural Network Paper 2"]}'
        expected_json:
          search_done: true
          topic: "neural networks"
        json_schema:
          type: "object"
          required: ["search_done", "topic", "paper_titles"]
          properties:
            search_done:
              type: "boolean"
              enum: [true]
            topic:
              type: "string"
              enum: ["neural networks"]
            paper_titles:
              type: "array"
              items:
                type: "string"
              minItems: 1
      - prompt: 'Use search_by_abstract to find papers with "deep learning" in the abstract. Return ONLY this exact JSON with no other text: {"second_search": true, "method": "abstract", "paper_titles": ["Deep Learning Paper 1", "Deep Learning Paper 2"]}'
        expected_json:
          second_search: true
          method: "abstract"
        json_schema:
          type: "object"
          required: ["second_search", "method", "paper_titles"]
          properties:
            second_search:
              type: "boolean"
              enum: [true]
            method:
              type: "string"
              enum: ["abstract"]
            paper_titles:
              type: "array"
              items:
                type: "string"
              minItems: 1
    timeout: 90

